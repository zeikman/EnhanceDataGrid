jQuery.fn.clearHiddenFields=function(){this.find('*').filter(':input[type=hidden]').each(function(){this.value=null})};class EnhanceDataGrid{static checkDuplicateIds(){const self=this;$('[id]').each(function(){const ids=$(`[id="${this.id}"]`);if(ids.length>1&&ids[0]==this)
console.warn(`Multiple IDs #${this.id}|Count@ ${ids.length}`);})}
static isNull(input,identical){if(typeof identical==='boolean'&&identical)
return input===null;else{if(typeof input==='string')
input=input.toLowerCase();if(input==null||input=='null')
return!0;else return!1}}
static isUndefined(input,identical){if(typeof identical==='boolean'&&identical)
return input===undefined;else{if(typeof input==='string')
input=input.toLowerCase();if(input==undefined||input=='undefined')
return!0;else return!1}}
static isEmptyString(input){return input===''}
static isUnset(input,trim){if(typeof trim==='boolean'&&trim&&typeof input==='string')
input=input.trim();if(EnhanceDataGrid.isNull(input)||EnhanceDataGrid.isUndefined(input)||EnhanceDataGrid.isEmptyString(input))
return!0;else return!1}
static transformStringToObject(prmstr,equalto='=',combinator='&'){if(prmstr[0]==='?')prmstr=prmstr.slice(1);const params={};const prmArr=prmstr.split(combinator);for(let i=0;i<prmArr.length;i++){const tmparr=prmArr[i].split(equalto);params[tmparr[0]]=window.decodeURIComponent(tmparr[1])}
return params}
static transformObjectToString(prmobj,equalto='=',combinator='&'){let transformString='';$.each(prmobj,(key,value)=>transformString+=`${key}${equalto}${window.encodeURIComponent(value)}${combinator}`);return transformString.substring(0,transformString.length-1)}
static getSearchParameters(url){const prmstr=(typeof url==='string'&&url)?url.split('?')[1]:window.location.search.slice(1);return prmstr!==null&&prmstr!==''?EnhanceDataGrid.transformStringToObject(prmstr):{}}
static insertQueryString(url,params){if(url.indexOf('?')>-1){const qs=EnhanceDataGrid.getSearchParameters(url);Object.assign(qs,params);params=qs;url=url.split('?')[0]}
return url+'?'+EnhanceDataGrid.transformObjectToString(params)}
static debounce(fn,delay){let timer=null;return function(){const context=this;const args=arguments;window.clearTimeout(timer);timer=window.setTimeout(function(){fn.apply(context,args)},delay)}}
static throttle(fn,threshhold,scope){threshhold=threshhold||(threshhold=250);let last=null;let deferTimer=null;return function(){const context=scope||this;const now=+(new Date());const args=arguments;if(last&&now<last+threshhold){window.clearTimeout(deferTimer);deferTimer=window.setTimeout(function(){last=now;fn.apply(context,args)},threshhold)}else{last=now;fn.apply(context,args)}}}
static isValidKeyboardInput(keyDownEvent){const keys={BACKSPACE:8,TAB:9,CLEAR:12,ENTER:13,SHIFT:16,CTRL:17,ALT:18,PAUSE:19,CAPS_LOCK:20,ESCAPE:27,SPACE:32,PAGE_UP:33,PAGE_DOWN:34,END:35,HOME:36,LEFT_ARROW:37,UP_ARROW:38,RIGHT_ARROW:39,DOWN_ARROW:40,INSERT:45,DELETE:46,HELP:47,LEFT_WINDOW:91,RIGHT_WINDOW:92,SELECT:93,NUMPAD_0:96,NUMPAD_1:97,NUMPAD_2:98,NUMPAD_3:99,NUMPAD_4:100,NUMPAD_5:101,NUMPAD_6:102,NUMPAD_7:103,NUMPAD_8:104,NUMPAD_9:105,NUMPAD_MULTIPLY:106,NUMPAD_PLUS:107,NUMPAD_ENTER:108,NUMPAD_MINUS:109,NUMPAD_PERIOD:110,NUMPAD_DIVIDE:111,F1:112,F2:113,F3:114,F4:115,F5:116,F6:117,F7:118,F8:119,F9:120,F10:121,F11:122,F12:123,F13:124,F14:125,F15:126,NUM_LOCK:144,SCROLL_LOCK:145,UP_DPAD:175,DOWN_DPAD:176,LEFT_DPAD:177,RIGHT_DPAD:178,};switch(keyDownEvent.keyCode){case keys.TAB:case keys.CLEAR:case keys.ENTER:case keys.SHIFT:case keys.CTRL:case keys.ALT:case keys.PAUSE:case keys.CAPS_LOCK:case keys.ESCAPE:case keys.PAGE_UP:case keys.PAGE_DOWN:case keys.END:case keys.HOME:case keys.LEFT_ARROW:case keys.UP_ARROW:case keys.RIGHT_ARROW:case keys.DOWN_ARROW:case keys.INSERT:case keys.DELETE:case keys.HELP:case keys.LEFT_WINDOW:case keys.RIGHT_WINDOW:case keys.SELECT:case keys.NUMPAD_MULTIPLY:case keys.NUMPAD_PLUS:case keys.NUMPAD_ENTER:case keys.NUMPAD_MINUS:case keys.NUMPAD_PERIOD:case keys.NUMPAD_DIVIDE:case keys.F1:case keys.F2:case keys.F3:case keys.F4:case keys.F5:case keys.F6:case keys.F7:case keys.F8:case keys.F9:case keys.F10:case keys.F11:case keys.F12:case keys.F13:case keys.F14:case keys.F15:case keys.NUM_LOCK:case keys.SCROLL_LOCK:case keys.copyKey:return!1;default:return!0}}
#_syntax;#_grid;#_id;#_zproplist=['autoFilter','autoFind','autoDelayTiming','bootstrap','buttonTheme','centeredColumns','checkedDatafield','dataAdapter','dataSource','dateFormat','enterFilter','enterFind','jsonSource','rowIndexWidth','searchInput','showFilterButton','showFilterRowButton','showFindButton','showRowIndex','tbElement','useBootstrap',];#_zprops={};#_props={width:'100%',height:'100%',sortable:!0,filterable:!0,filtermode:'excel',enabletooltips:!0,showaggregates:!0,autoFilter:!1,autoFind:!1,autoDelayTiming:300,bootstrap:!1,buttonTheme:'',centeredColumns:!1,checkedDatafield:'selected',dataAdapter:'',dataSource:'',dateFormat:'',enterFilter:!0,enterFind:!1,jsonSource:null,rowIndexWidth:50,searchInput:!1,showFilterButton:!0,showFilterRowButton:!0,showFindButton:!1,showRowIndex:!0,tbElement:[],useBootstrap:!1,};#_dirty={};#_allDirty={};#_checkedItems=[];#_jsonSource;#_dataSource;#_dataAdapter;#_clearSelection=!1;#_alert(opt){const option_type=typeof opt;let jquery_confirm_options={useBootstrap:this.#_zprops.useBootstrap,animation:'zoom',closeAnimation:'zoom',animateFromElement:!1,backgroundDismiss:!0,escapeKey:!0,};if(option_type==='string'){jquery_confirm_options={...jquery_confirm_options,...{title:'',content:opt}}}
if(option_type==='object'){jquery_confirm_options={...jquery_confirm_options,...opt}}
if($.alert)
$.alert(jquery_confirm_options);else{if(option_type==='string')
window.alert(opt);if(option_type==='object'&&opt.content)
window.alert(opt.content);}}
#_initJqxGrid(syntax){this.#_syntax=syntax;this.#_extractZProps();this.#_processColumns();this.#_renderToolbar();const self=this;const gridId=this.#_id;const props=this.#_props;const zProps=this.#_zprops;const tbElement=zProps.tbElement;const hasTbElement=tbElement.length>0;const showSearchBar=typeof zProps.searchInput==='boolean'&&zProps.searchInput;const showRowIndex=typeof zProps.showRowIndex==='boolean'&&zProps.showRowIndex;if(hasTbElement||showSearchBar)
props.showtoolbar=!0;if(showRowIndex&&EnhanceDataGrid.isUnset(props.showstatusbar))
props.showstatusbar=!0;this.#_jsonSource=zProps.jsonSource;this.#_dataSource=zProps.dataSource;this.#_dataAdapter=zProps.dataAdapter;if(EnhanceDataGrid.isUnset(props.source)){if(this.#_jsonSource&&typeof this.#_jsonSource==='object'){this.#_dataSource={url:this.#_jsonSource.url?this.#_jsonSource.url:'',datafields:this.#_jsonSource.datafields?this.#_jsonSource.datafields:[],datatype:'json',id:'id',cache:!1,addrow:function(rowid,rowdata,position,commit){const data=$.param(rowdata);$.ajax({url:this.#_jsonSource.url,data:data,dataType:'json',cache:!1,success:function(data,status,xhr){commit(!0)},error:function(jqXhr,textStatus,errorThrown){commit(!1)},})},deleterow:function(rowid,commit){commit(!0)},updaterow:function(rowid,newdata,commit){commit(!0)},};if(this.#_jsonSource.opt&&typeof this.#_jsonSource.opt==='object')
this.#_dataSource={...this.#_dataSource,...this.#_jsonSource.opt}}
if(this.#_dataSource)
this.#_dataAdapter=new $.jqx.dataAdapter(this.#_dataSource);if(this.#_dataAdapter)
props.source=this.#_dataAdapter}
$(gridId).on('bindingcomplete',event=>{const rows=$(self.#_id).jqxGrid('getrows');const checkedDatafield=self.#_zprops.checkedDatafield;self.#_checkedItems=[];for(let i=0;i<rows.length;i++){const row=rows[i];if(row[checkedDatafield]==1)
self.#_checkedItems.push(row.id);}
if(self.#_clearSelection)
self.clearSelection();self.#_clearSelection=!1});if($(gridId).length>0){if(syntax==='old'){this.#_grid=$(gridId).jqxGrid(props);this.#_initDirtyFlagEvent()}
if(syntax==='new')this.#_grid=new jqxGrid(gridId,props);}else{return console.error(`[EnhanceDataGrid] Error: DOM element '${gridId}' not found !`)}}
#_initDirtyFlagEvent(){const self=this;this.jqxGrid.on('cellvaluechanged',event=>{const args=event.args;const rowindex=args.rowindex;const datafield=args.datafield;const oldvalue=args.oldvalue;const newvalue=args.newvalue;const data=self.getRowData(rowindex);if(datafield===self.#_zprops.checkedDatafield){self.#_dirty[data.id]=newvalue;const itemindex=self.#_checkedItems.indexOf(data.id);if(newvalue){if(itemindex==-1)
self.#_checkedItems.push(data.id);}else{if(itemindex>-1)
self.#_checkedItems.splice(itemindex,1);}}
if(self.#_allDirty[data.id])
self.#_allDirty[data.id][datafield]=newvalue;else{const dirtyObject=new Object({});dirtyObject.rowindex=rowindex;dirtyObject[datafield]=newvalue;self.#_allDirty[data.id]=dirtyObject}})}
#_clearDirtyFlag(){this.#_dirty={};this.#_allDirty={}};#_extractZProps(){const object=this.#_props;for(const prop in object){if(Object.hasOwnProperty.call(object,prop)){if(this.#_zproplist.indexOf(prop)>-1){this.#_zprops[prop]=object[prop];delete this.#_props[prop]}}}}
#_processColumns(){if(this.#_zprops.centeredColumns===!0){this.#_props.columns.forEach(c=>{if(!c.hidden&&!c.align)
c.align='center'});if(this.#_props.columngroups){this.#_props.columngroups.forEach(c=>{if(!c.hidden&&!c.align)
c.align='center'})}}
this.#_displayRowIndex()}
#_displayRowIndex(){if(this.#_zprops.showRowIndex){this.#_props.columns.unshift({text:'No',datafield:'numb',columntype:'number',align:'center',cellsalign:'center',pinned:!0,menu:!1,sortable:!1,editable:!1,groupable:!1,resizable:!1,draggable:!1,filterable:!1,aggregates:['count'],width:this.#_zprops.rowIndexWidth,cellsrenderer:(rowindex,columnField,value,defaultHTML,columnProperties,rowdata)=>{let index=++value;rowdata.numb=index;if(rowdata.parentItem){index=rowdata.parentItem.subItems.findIndex(x=>x.uid==rowdata.uid);rowdata.numb=++index}
return $(defaultHTML).text(index).get(0).outerHTML},aggregatesrenderer:aggregates=>{let renderstring=aggregates.count;if(!renderstring)renderstring=0;return `<div style="display: flex; align-items: center; justify-content: center; height: 100%;">${renderstring}</div>`}})}}
#_renderToolbar(){const self=this;const gridId=this.#_id;const setId=gridId.slice(1);const props=this.#_props;const zProps=this.#_zprops;props.rendertoolbar=toolbar=>{const container=$('<div />').addClass('edg-group').css({height:'100%',padding:'0px 5px'});toolbar.append(container);if(typeof zProps.searchInput==='boolean'&&zProps.searchInput){const enterKeyFind=typeof zProps.enterFind==='boolean'&&zProps.enterFind;const enterKeyFilter=typeof zProps.enterFilter==='boolean'&&zProps.enterFilter;const isAutoFind=typeof zProps.autoFind==='boolean'&&zProps.autoFind;const isAutoFilter=typeof zProps.autoFilter==='boolean'&&zProps.autoFilter;let searchPlaceHolder='No functioning... (T_T)';let findTitle='Find';let filterTitle='Filter';let clearPlaceHolder='No functioning... (T_T)';if(enterKeyFind){searchPlaceHolder='Find Record';findTitle='Find (Ctrl+Enter)';clearPlaceHolder='Clear Find (ESC)'}
if(enterKeyFilter){searchPlaceHolder='Filter Record';filterTitle='Filter (Enter)';clearPlaceHolder='Clear Filter (ESC)'}
if(enterKeyFind&&enterKeyFilter){searchPlaceHolder='Find/Filter Record';clearPlaceHolder='Clear Find/Filter (ESC)'}
if(isAutoFind){searchPlaceHolder='Auto Find Record';clearPlaceHolder='Clear Find (ESC)'}
if(isAutoFilter){searchPlaceHolder='Auto Filter Record';clearPlaceHolder='Clear Filter (ESC)'}
if(isAutoFind&&isAutoFilter){searchPlaceHolder='autoFind? autoFilter?';clearPlaceHolder='autoFind? autoFilter?'}
let searchInputProp={width:200,height:25,placeHolder:searchPlaceHolder,};let searchInputCSS={margin:'0px 5px 0px 3px',padding:'0px 3px',minWidth:200};if((typeof zProps.showFindButton==='boolean'&&zProps.showFindButton)||(typeof zProps.showFilterButton==='boolean'&&zProps.showFilterButton)||(typeof zProps.showFilterRowButton==='boolean'&&zProps.showFilterRowButton)){searchInputCSS.margin='0px 5px 0px 0px'}
const searchInput=$(`<input id="${setId}_searchInput" type="text" />`).jqxInput(searchInputProp).css(searchInputCSS);container.append(searchInput);let searchRelatedButtonCSS={theme:zProps.buttonTheme,height:25};if(isAutoFind||isAutoFilter){if(isAutoFind&&isAutoFilter){this.#_alert({columnClass:'medium',title:'<b>Setting Error</b>',content:`Grid ID: ${this.#_id}. You can either set autoFind:true or autoFilter:true but not both.`});return!1}
const delaySearch=EnhanceDataGrid.debounce(function(event){if(searchInput.val().trim()||EnhanceDataGrid.isValidKeyboardInput(event)){event.preventDefault();if(isAutoFind)
self.#_highlightData(searchInput,!0);if(isAutoFilter)
self.#_filterData(searchInput,!0);}},zProps.autoDelayTiming);searchInput.keyup(event=>{delaySearch(event);if(event.which===27){clearButton.trigger('click')}})}else{searchInput.keydown(event=>{if(event.which===13){if(event.ctrlKey){if(typeof zProps.enterFind==='boolean'&&zProps.enterFind)
self.#_highlightData(searchInput);}else{if(typeof zProps.enterFilter==='boolean'&&zProps.enterFilter)
self.#_filterData(searchInput)}}
if(event.which===27){clearButton.trigger('click')}});const findButton=$('<button>').attr('title',findTitle);if(typeof zProps.showFindButton==='boolean'&&zProps.showFindButton){$('<i>').addClass('fa-solid fa-fw fa-search').appendTo(findButton);findButton.jqxButton(searchRelatedButtonCSS).on('click',event=>{event.preventDefault();if(self.#_highlightData(searchInput)){}});container.append(findButton)}
const filterButton=$('<button>').attr('title',filterTitle);if(typeof zProps.showFilterButton==='boolean'&&zProps.showFilterButton){$('<i>').addClass('fa-solid fa-fw fa-filter').appendTo(filterButton);filterButton.jqxButton(searchRelatedButtonCSS).on('click',event=>{event.preventDefault();if(self.#_filterData(searchInput)){}});container.append(filterButton)}}
const clearButton=$('<button>').attr('title',clearPlaceHolder);$('<i>').attr('id',`${setId}_filterRowClear`).addClass('fa-solid fa-fw fa-xmark').appendTo(clearButton);clearButton.jqxButton(searchRelatedButtonCSS).on('click',event=>{event.preventDefault();if(self.#_syntax==='old')
self.jqxGrid.jqxGrid('clearfilters');if(self.#_syntax==='new')
self.jqxGrid.clearfilters();self.clearSelection();searchInput.val(null)});container.append(clearButton);if(typeof zProps.showFilterRowButton==='boolean'&&zProps.showFilterRowButton){const filterRowButton=$('<button>').attr({id:`${setId}_filterRowButton`,title:'Show Filter Row'});if(typeof props.showfilterrow==='boolean'&&props.showfilterrow){$('<i>').attr('id',`${setId}_filterRowArrowDown`).addClass('fa-solid fa-fw fa-chevron-down').hide().appendTo(filterRowButton);$('<i>').attr('id',`${setId}_filterRowArrowUp`).addClass('fa-solid fa-fw fa-chevron-up').appendTo(filterRowButton)}else{$('<i>').attr('id',`${setId}_filterRowArrowDown`).addClass('fa-solid fa-fw fa-chevron-down').appendTo(filterRowButton);$('<i>').attr('id',`${setId}_filterRowArrowUp`).addClass('fa-solid fa-fw fa-chevron-up').hide().appendTo(filterRowButton)}
filterRowButton.jqxButton(searchRelatedButtonCSS).on('click',event=>{event.preventDefault();$(`${gridId}_filterRowButton`).attr('title',self.jqxGrid.jqxGrid('showfilterrow')?'Show Filter Row':'Hide Filter Row');self.jqxGrid.jqxGrid({showfilterrow:!self.jqxGrid.jqxGrid('showfilterrow')});if(self.#_syntax==='old')
self.jqxGrid.jqxGrid('clearfilters');if(self.#_syntax==='new')
self.jqxGrid.clearfilters();if(self.jqxGrid.jqxGrid('showfilterrow')){$(`${gridId}_filterRowArrowDown`).hide();$(`${gridId}_filterRowArrowUp`).show()}else{$(`${gridId}_filterRowArrowDown`).show();$(`${gridId}_filterRowArrowUp`).hide()}});container.append(filterRowButton)}
const tbElement=zProps.tbElement;if(parseInt(tbElement.length)>0&&tbElement[0].button&&tbElement[0].button!='divider'){$('<div>').css({width:4,height:20,minWidth:1,background:'#555555',borderRadius:5}).appendTo(container)}}
self.#_appendToolbarElement(container)}}
#_appendToolbarElement(container){const self=this;const props=this.#_props;const zProps=this.#_zprops;const tbElement=zProps.tbElement;const buttonDefault={reload:{icon:'fa-solid fa-fw fa-sync-alt',title:'Reload Record',width:25,height:25,widget:'jqxButton',},add:{icon:'fa-solid fa-fw fa-plus',title:'Add New',width:25,height:25,widget:'jqxButton',},edit:{icon:'fa-solid fa-fw fa-edit',title:'Edit',width:25,height:25,widget:'jqxButton',},delete:{icon:'fa-solid fa-fw fa-trash-alt',title:'Delete',width:25,height:25,widget:'jqxButton',},print:{icon:'fa-solid fa-fw fa-print',title:'Print',width:25,height:25,widget:'jqxButton',},excel:{icon:'fa-solid fa-fw fa-file-excel',title:'Export Excel',width:25,height:25,widget:'jqxButton',},csv:{icon:'fa-solid fa-fw fa-file-alt',title:'Export CSV',width:64,height:25,widget:'jqxButton',},custombutton:{icon:'fa-solid fa-fw fa-circle-question',title:'Button',width:'auto',height:25,widget:'jqxButton',},};const controlledMessage={no_row_selected:{title:'No Record Selected',message:'Please select one of the record first.',},no_data_id:{title:'Property "id" Not Found',message:'No data ID found !',},no_row_print:{title:'No Record Found',message:'No record for printing.',},no_url:{title:'Property "url" Not Found',message:'Please specified "url" property.',},};const buttonEvent={click:{_add:function(event){event.preventDefault();$(this).keydown();const button_id=event.currentTarget.id.indexOf('#')==-1?'#'+event.currentTarget.id:event.currentTarget.id;const check_function=self.#_getGridButtonProps(tbElement,button_id,'check');const proceed=typeof check_function==='function'?check_function():!0;if(proceed){const win=self.#_getGridButtonProps(tbElement,button_id,'win');const modal=self.#_getGridButtonProps(tbElement,button_id,'modal');const form=self.#_getGridButtonProps(tbElement,button_id,'form');if(form)
_clearFormInputs(form);if(win){_openJqxWindow({id:button_id,element:this,})}
if(modal)
_openModal(modal);}
$(this).keyup()},_edit:function(event){event.preventDefault();const selectedRowIndex=self.getSelectedRowIndex();if(selectedRowIndex>-1){$(this).keydown();const button_id=event.currentTarget.id.indexOf('#')==-1?'#'+event.currentTarget.id:event.currentTarget.id;const check_function=self.#_getGridButtonProps(tbElement,button_id,'check');const proceed=typeof check_function==='function'?check_function():!0;if(proceed){const win=self.#_getGridButtonProps(tbElement,button_id,'win');const modal=self.#_getGridButtonProps(tbElement,button_id,'modal');if(win){_openJqxWindow({id:button_id,element:this,})}
if(modal)
_openModal(modal);let debug=!1;if(debug)
console.log(self.getSelectedRowData());}
$(this).keyup()}else{_promptError({title:controlledMessage.no_row_selected.title,error:controlledMessage.no_row_selected.message,})}},_delete:function(event){event.preventDefault();const selectedRowIndex=self.getSelectedRowIndex();if(selectedRowIndex>-1){$(this).keydown();const button_id=event.currentTarget.id.indexOf('#')==-1?'#'+event.currentTarget.id:event.currentTarget.id;const check_function=self.#_getGridButtonProps(tbElement,button_id,'check');const proceed=typeof check_function==='function'?check_function():!0;if(proceed){const data=self.getSelectedRowData();const data_id=data.id;const _params=self.#_getGridButtonProps(tbElement,button_id,'param');const _postparams=self.#_getGridButtonProps(tbElement,button_id,'postparam');const _success=self.#_getGridButtonProps(tbElement,button_id,'success');const _fail=self.#_getGridButtonProps(tbElement,button_id,'fail');let _url=self.#_getGridButtonProps(tbElement,button_id,'url');let _debug=self.#_getGridButtonProps(tbElement,button_id,'debug');const _title='Delete Record';const _message='Are you sure to delete selected record ?';if(typeof _url==='undefined'||_url===undefined||typeof _url==='null'||_url===null){_promptError({title:controlledMessage.no_url.title,error:controlledMessage.no_url.message,});return!1}
if($.confirm){$.confirm({useBootstrap:zProps.useBootstrap,columnClass:'medium',animation:'zoom',closeAnimation:'zoom',animateFromElement:!1,backgroundDismiss:!0,escapeKey:!0,title:_title,content:_message,buttons:{confirm:{btnClass:'btn-danger',action:()=>{if(typeof _url==='function'){if(data_id)
_url(data,data_id);else _url(data)}
if(typeof _url==='string'){if(data_id){let _post={id:data_id};if(_postparams&&typeof _postparams==='object')
_post=EnhanceDataGrid.insertQueryString(_post,_postparams);if(_postparams&&typeof _postparams==='function')
_post=EnhanceDataGrid.insertQueryString(_post,_postparams());if(_params&&typeof _params==='object')
_url=EnhanceDataGrid.insertQueryString(_url,_params);if(_params&&typeof _params==='function')
_url=EnhanceDataGrid.insertQueryString(_url,_params());if(_debug===!0||_debug==='true'){console.log(`%c$.post() to '${_url}' with $_POST ${JSON.stringify(_post)}`,'color: red; font-weight: bold;');return!0}
$.post(_url,_post).done(resp=>{if(_success&&typeof _success==='function')
_success(resp);else self.refresh()}).fail(resp=>{if(_fail&&typeof _fail==='function')
_fail(resp);else{self.#_alert({title:'Delete Failed',content:resp,})}})}else{self.#_alert({title:controlledMessage.no_data_id.title,content:controlledMessage.no_data_id.message,});return!1}}}},cancel:()=>{},}});return}else{const confirm=window.confirm(_message);if(confirm){if(typeof _url==='function'){if(data_id)
_url(data,data_id);else _url(data)}
if(typeof _url==='string'){if(data_id){const _post={id:data_id};if(_postparams&&typeof _postparams==='object')
_post=EnhanceDataGrid.insertQueryString(_post,_postparams);if(_postparams&&typeof _postparams==='function')
_post=EnhanceDataGrid.insertQueryString(_post,_postparams());if(_params&&typeof _params==='object')
_url=EnhanceDataGrid.insertQueryString(_url,_params);if(_params&&typeof _params==='function')
_url=EnhanceDataGrid.insertQueryString(_url,_params());if(_debug===!0||_debug==='true'){console.log(`%c$.post() to '${_url}' with $_POST ${JSON.stringify(_post)}`,'color: red; font-weight: bold;');return!0}
$.post(_url,_post).done(resp=>{if(_success&&typeof _success==='function')
_success(resp);else self.refresh()}).fail(resp=>{if(_fail&&typeof _fail==='function')
_fail(resp);else{self.#_alert({title:'Delete Failed',content:resp,})}})}else{self.#_alert({title:controlledMessage.no_data_id.title,content:controlledMessage.no_data_id.message,});return!1}}}}}
$(this).keyup()}else{_promptError({title:controlledMessage.no_row_selected.title,error:controlledMessage.no_row_selected.message,})}},_find:function(event){event.preventDefault();$(this).keydown();console.log('_find');$(this).keyup()},_reload:function(event){event.preventDefault();$(this).keydown();self.refresh();$(this).keyup()},_view:function(event){event.preventDefault();$(this).keydown();console.log('_view');$(this).keyup()},_save:function(event){event.preventDefault();$(this).keydown();console.log('_save');$(this).keyup()},_print:function(event){event.preventDefault();if(self.getRows().length>0){const button_id=event.currentTarget.id.indexOf('#')==-1?'#'+event.currentTarget.id:event.currentTarget.id;$(this).keydown();const _params=self.#_getGridButtonProps(tbElement,button_id,'param');let _url=self.#_getGridButtonProps(tbElement,button_id,'url');if(typeof _url==='undefined'||_url===undefined||typeof _url==='null'||_url===null){_promptError({title:controlledMessage.no_url.title,error:controlledMessage.no_url.message,});return!1}
if(_params&&typeof _params==='object')
_url=EnhanceDataGrid.insertQueryString(_url,_params);if(_params&&typeof _params==='function')
_url=EnhanceDataGrid.insertQueryString(_url,_params());$(this).keyup();window.open(_url)}else{_promptError({title:controlledMessage.no_row_print.title,error:controlledMessage.no_row_print.message,})}},_excel:function(event){event.preventDefault();$(this).keydown();const button_id=event.currentTarget.id.indexOf('#')==-1?'#'+event.currentTarget.id:event.currentTarget.id;const _filename=self.#_getGridButtonProps(tbElement,button_id,'filename');self.jqxGrid.jqxGrid('exportdata','xlsx',_filename?_filename:'EXCEL_FILE');$(this).keyup()},_csv:function(event){event.preventDefault();$(this).keydown();const button_id=event.currentTarget.id.indexOf('#')==-1?'#'+event.currentTarget.id:event.currentTarget.id;const _filename=self.#_getGridButtonProps(tbElement,button_id,'filename');self.jqxGrid.jqxGrid('exportdata','csv',_filename?_filename:'CSV_FILE');$(this).keyup()},_active:function(event){event.preventDefault();$(this).keydown();console.log('_active');$(this).keyup()},_inactive:function(event){event.preventDefault();$(this).keydown();console.log('_inactive');$(this).keyup()},}};function _getElement(opt){if(typeof opt.id==='string')
return $(opt.id);if(typeof opt.id==='object')
return opt.id;return null}
function _clearFormInputs(form){if($(form).length>0){let debug=!1;if(debug)
console.log(EnhanceDataGrid.transformStringToObject($(form).serialize()));if($(form+' .jqx-input').length>0)
$(form+' .jqx-input').val(null);if($(form+' .jqx-datetimeinput').length>0)
$(form+' .jqx-datetimeinput').val(null);if($(form+' .jqx-checkbox').length>0)
$(form+' .jqx-checkbox').jqxCheckBox('uncheck');if($(form+' .jqx-radiobutton').length>0)
$(form+' .jqx-radiobutton').jqxRadioButton('uncheck');if($(form+' .jqx-combobox').length>0)
$(form+' .jqx-combobox').jqxComboBox('clearSelection');$(form).find('*').filter(':input').each(function(){this.value=null});$(form).find('input[type=checkbox]').prop('checked',!1);$(form).find('input[type=radio]').prop('checked',!1);$(form).find('select').prop('selectedIndex',-1);$(form).clearHiddenFields();if(debug)
console.log(EnhanceDataGrid.transformStringToObject($(form).serialize()));return!0}else{self.#_alert({title:'Form Not Found',content:`Form ID: <b>${form}</b>`})}}
function _switchModalContent(currentTarget){const currentElement=$(currentTarget);const parentElement=currentElement.parent();parentElement.children().hide();currentElement.show()}
function _openModal(id,opt){const modal=_getElement({id:id});if(opt){if(typeof opt.timeout==='number')
setTimeout(()=>modal.modal('hide'),opt.timeout);if(typeof opt.showContent==='string'){_switchModalContent(opt.showContent);$(opt.showContent).scrollTop(0)}}
modal.modal('show')}
function _promptError(opt){if(zProps.useBootstrap)
_createModalError.call(self,opt.title?opt.title:'No Record Selected',opt.error);else self.#_alert(opt.error)}
function _createModalError(modalTitle,modalBody){if(typeof bootstrap==='object'){const modal_error_id=`${this.#_id}_edit_modal_error`;const modal_error=`<div id="${modal_error_id.slice(1)}" class="modal fade" tabindex="-1">
          <div class="modal-dialog">
            <div class="modal-content text-bg-danger">
              <div class="modal-header">
                <h5 class="modal-modalTitle">${modalTitle}</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
              <div class="modal-body">
                <p class="m-0">${modalBody}</p>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-outline-light" data-bs-dismiss="modal">Close</button>
              </div>
            </div>
          </div>
        </div>`;if($(modal_error_id).length===0){$('body').append($(modal_error));const myModal=$(modal_error_id);const options={};const myModalAlternative=new bootstrap.Modal(modal_error_id,options);myModal.on('hidden.bs.modal',e=>{myModalAlternative.dispose();myModal.remove()});myModalAlternative.show()}}else{self.#_alert($.alert?{title:modalTitle,content:modalBody}:modalBody)}}
function _openJqxWindow(opt){const button_id=opt.id;const el=opt.element;const win=self.#_getGridButtonProps(tbElement,button_id,'win');const verticalAlign=self.#_getGridButtonProps(tbElement,button_id,'verticalAlign');let winOpenOnButton=self.#_getGridButtonProps(tbElement,button_id,'winOpenOnButton');let winOpenOnClick=self.#_getGridButtonProps(tbElement,button_id,'winOpenOnClick');if(typeof winOpenOnButton!=='boolean'||EnhanceDataGrid.isUnset(winOpenOnButton))
winOpenOnButton=!0;if(typeof winOpenOnClick!=='boolean'||EnhanceDataGrid.isUnset(winOpenOnClick))
winOpenOnClick=!0;if($(win).length>0){_positioningJqxWindow({...opt,...{win:win,vAlign:verticalAlign,winOnBtn:winOpenOnButton,openWin:winOpenOnClick,}});if(typeof winOpenOnClick==='boolean'&&winOpenOnClick)
$(win).jqxWindow('open');}else{self.#_alert({title:'jqxWindow Widget Not Found',content:`Button ID: <b>${el.id}</b><br />jqxWindow ID: <b>${win}</b>`})}}
function _positioningJqxWindow(opt){const win=opt.win;const el=opt.element;const verticalAlign=opt.vAlign;const winOpenOnButton=opt.winOnBtn;$(win).jqxWindow({position:'center'});if(typeof verticalAlign==='number'){const response=new $.jqx.response();const viewPort=response.viewPort;$(win).jqxWindow({position:{x:(viewPort.width-$(win).width())/2,y:verticalAlign}})}
if(typeof winOpenOnButton==='boolean'&&winOpenOnButton){const position=$(el).offset();$(win).jqxWindow({position:{x:position.left,y:position.top}})}}
const flexExpander=$('<div class="flex-expander" style="position: relative; min-width: 20px;" />');const separator=$('<div>').css({minWidth:4,width:4,height:20,background:'#555555',borderRadius:5});const widthChangeFunc=event=>{if($(this).width()===20){console.log('change layout')}else{console.log($(this).width())}};for(let i=0;i<tbElement.length;i++){const btn=tbElement[i].button.toLowerCase();let showElement=!0;const isBoolean=typeof tbElement[i].visible==='boolean';const isNumber=typeof tbElement[i].visible==='number'&&tbElement[i].visible===0;const isString=typeof tbElement[i].visible==='string'&&(tbElement[i].visible==='0'||tbElement[i].visible==='');if(isBoolean||isNumber||isString){showElement=!1}
if(showElement){if(btn==='divider'){container.append(flexExpander.clone())}else if(btn==='separator'){container.append(separator.clone())}else if(btn==='custom'){if(tbElement[i].admin===!0||tbElement[i].admin===1||tbElement[i].admin==='1'){container.append(tbElement[i].buttonNode.addClass('btn-admin'))}else{container.append(tbElement[i].buttonNode)}
if(tbElement[i].callback&&typeof tbElement[i].callback==='function')tbElement[i].callback();}else if(btn==='icon'){}else{if(buttonDefault[btn]){const generatedButton=this.#_generateButtonSyntax({id:tbElement[i].id?tbElement[i].id:null,disabled:typeof tbElement[i].disabled==='boolean'?tbElement[i].disabled:!1,icon:tbElement[i].icon?tbElement[i].icon:buttonDefault[btn].icon,iconColor:tbElement[i].iconColor?tbElement[i].iconColor:buttonDefault[btn].iconColor,text:(tbElement[i].text||tbElement[i].text==='')?tbElement[i].text:'',title:(tbElement[i].title||tbElement[i].title==='')?tbElement[i].title:buttonDefault[btn].title,});if(tbElement[i].admin===!0||tbElement[i].admin===1||tbElement[i].admin==='1'){generatedButton.addClass('btn-admin')}
let funcName='_'+btn;generatedButton.on('click',tbElement[i].click?e=>tbElement[i].click(e,self.getSelectedRowData()):buttonEvent.click[funcName]);if(tbElement[i].beforeClick)
generatedButton.keydown(tbElement[i].beforeClick);if(tbElement[i].afterClick)
generatedButton.keyup(tbElement[i].afterClick);tbElement[i]=this.#_initGridButton({container:container,btn:generatedButton,theme:tbElement[i].theme?tbElement[i].theme:this.#_zprops.buttonTheme,width:tbElement[i].width?tbElement[i].width:(tbElement[i].text||tbElement[i].text==='')?'auto':buttonDefault[btn].width,height:tbElement[i].height?tbElement[i].height:buttonDefault[btn].height,widget:tbElement[i].widget?tbElement[i].widget:buttonDefault[btn].widget,disabled:tbElement[i].disabled,btnElement:tbElement[i],})}else{self.#_alert({title:'Undefined Button',content:`Unknown "${btn}" button.`,})}}}}}
#_generateButtonSyntax(opt){const id=opt.id;const disabled=opt.disabled;const icon=opt.icon;const iconColor=opt.iconColor;const text=opt.text;const title=opt.title;const buttonType=opt.widget;const iconButton=$('<button>');if(id)iconButton.attr('id',id);if(title)iconButton.attr('title',title);if(icon!='none'){const fontAwesome=$('<i>');if(iconColor)fontAwesome.css('color',iconColor);fontAwesome.addClass(`${icon}`);fontAwesome.appendTo(iconButton)}
if(text){const iconText=$('<span>').html(text).appendTo(iconButton);if(icon==='none'){iconText.css('margin',0)}}
return iconButton}
#_initGridButton(opt){const container=opt.container;const button=opt.btn;const buttonWidth=opt.width;const buttonHeight=opt.height;const buttonType=opt.widget;const theme=opt.theme;const disabled=opt.disabled;let buttonElement=opt.btnElement;const buttonProperties={theme:theme,height:buttonHeight,disabled:typeof disabled==='boolean'?disabled:!1};const setupElementId=(btn,element)=>{if(btn.attr('id').indexOf('#')===-1)
element.id='#'+btn.attr('id');else element.id=btn.attr('id');return element}
if(buttonType){if(buttonType==='jqxToggleButton')
button.jqxToggleButton(buttonProperties);if(buttonType==='jqxButton')
button.jqxButton(buttonProperties);if(buttonType==='jqxDropDownList')
button.jqxDropDownList(buttonProperties);buttonElement=setupElementId(button,buttonElement)}else{console.error('Error: libGrid.#_initGridButton()','Unknown button type !<br />Plese check your coding.')}
container.append(button);return buttonElement}
#_getGridButtonProps=(json,key,type)=>{let obj='';key=key.toLowerCase();$.each(json,(index,v)=>{if(v.id){const result=v.id.toLowerCase()===key;if(result){switch(type){case 'title':obj=v.title;break;case 'form':obj=v.hasOwnProperty(type)?v.form:'';break;case 'url':obj=v.url;break;case 'element':obj=v.element;break;case 'debug':obj=v.debug;break;case 'message':obj=v.message;break;case 'filename':obj=v.filename;break;case 'modal':obj=v.modal;break;case 'window':obj=v.window;break;case 'win':obj=v.win;break;case 'winOpenOnButton':obj=v.winOpenOnButton;break;case 'winOpenOnClick':obj=v.winOpenOnClick;break;case 'verticalAlign':obj=v.verticalAlign;break;case 'admin':obj=v.admin;break;case 'visible':obj=v.visible;break;case 'param':obj=v.param;break;case 'postparam':obj=v.postparam;break;case 'keyword':obj=v.keyword;break;case 'column':obj=v.column;break;case 'columnprefix':obj=v.columnprefix;break;case 'click':obj=v.click;break;case 'beforeClick':obj=v.beforeClick;break;case 'afterClick':obj=v.afterClick;break;case 'check':obj=v.check;break;case 'success':obj=v.success;break;case 'fail':obj=v.fail;break;case 'error':obj=v.error;break;default:break}
return!1}}});return obj}
#_highlightData(searchInput,clearInputWhenError=!1){let sortColumn;if(this.#_syntax==='old')
sortColumn=this.jqxGrid.jqxGrid('getsortcolumn');if(this.#_syntax==='new')
sortColumn=this.jqxGrid.getsortcolumn();if(sortColumn){if(this.#_syntax==='old'){const rows=this.jqxGrid.jqxGrid('getdisplayrows');const searchValue=searchInput.val().trim().toLowerCase();const columnCellFormat=this.jqxGrid.jqxGrid('getcolumnproperty',sortColumn,'cellsformat');let highlightRowIndex=-1;let visibleRowIndex=-1;if(searchValue){let cellValue='';for(let i=0;i<rows.length;i++){cellValue=rows[i][sortColumn];if(EnhanceDataGrid.isNull(rows[i][sortColumn]))continue;const result=cellValue.toString().toLowerCase().search(searchValue);if(result>-1){highlightRowIndex=this.jqxGrid.jqxGrid('getrowboundindex',i);visibleRowIndex=i;break}}}
if(highlightRowIndex>-1){this.jqxGrid.jqxGrid('selectrow',highlightRowIndex);this.jqxGrid.jqxGrid('ensurerowvisible',visibleRowIndex)}else{this.clearSelection()}}
if(this.#_syntax==='new'){const rows=this.jqxGrid.getdisplayrows();const searchValue=searchInput.val().trim().toLowerCase();const columnCellFormat=this.jqxGrid.getcolumnproperty(sortColumn,'cellsformat');let highlightRowIndex=-1;let visibleRowIndex=-1;if(searchValue){let cellValue='';for(let i=0;i<rows.length;i++){cellValue=rows[i][sortColumn];if(EnhanceDataGrid.isNull(rows[i][sortColumn]))continue;const result=cellValue.toString().toLowerCase().search(searchValue);if(result>-1){highlightRowIndex=this.jqxGrid.getrowboundindex(i);visibleRowIndex=i;break}}}
if(highlightRowIndex>-1){this.jqxGrid.selectrow(highlightRowIndex);this.jqxGrid.ensurerowvisible(visibleRowIndex)}else{this.clearSelection()}}
return!0}else{this.#_alert({columnClass:'medium',title:'<b>Warning : Find Data</b>',content:'Please perform column sorting to select search field.'});if(typeof clearInputWhenError==='boolean'&&clearInputWhenError)
searchInput.val('');return!1}}
#_filterData(searchInput,clearInputWhenError=!1){let sortColumn;if(this.#_syntax==='old')
sortColumn=this.jqxGrid.jqxGrid('getsortcolumn');if(this.#_syntax==='new')
sortColumn=this.jqxGrid.getsortcolumn();if(sortColumn){if(this.#_syntax==='old'){const columnCellFormat=this.jqxGrid.jqxGrid('getcolumnproperty',sortColumn,'cellsformat');const filtergroup=new $.jqx.filter();const filter_or_operator=1;let filtervalue=searchInput.val().trim();if(filtervalue){const filterString=filtergroup.createfilter('stringfilter',filtervalue,'CONTAINS');filtergroup.addfilter(filter_or_operator,filterString);const filterNumeric=filtergroup.createfilter('numericfilter',filtervalue,'EQUAL');const dateFormat=this.#_zprops.dateFormat;if(dateFormat&&columnCellFormat===dateFormat){filtervalue=new Date(filtervalue);var filterDate=filtergroup.createfilter('datefilter',filtervalue,'EQUAL');filtergroup.addfilter(filter_or_operator,filterDate)}
this.jqxGrid.jqxGrid('addfilter',sortColumn,filtergroup);this.jqxGrid.jqxGrid('applyfilters')}else{this.jqxGrid.jqxGrid('clearfilters')}}
if(this.#_syntax==='new'){const columnCellFormat=this.jqxGrid.getcolumnproperty(sortColumn,'cellsformat');const filtergroup=new $.jqx.filter();const filter_or_operator=1;let filtervalue=searchInput.val().trim();if(filtervalue){const filterString=filtergroup.createfilter('stringfilter',filtervalue,'CONTAINS');filtergroup.addfilter(filter_or_operator,filterString);const filterNumeric=filtergroup.createfilter('numericfilter',filtervalue,'EQUAL');const dateFormat=this.#_zprops.dateFormat;if(dateFormat&&columnCellFormat===dateFormat){filtervalue=new Date(filtervalue);var filterDate=filtergroup.createfilter('datefilter',filtervalue,'EQUAL');filtergroup.addfilter(filter_or_operator,filterDate)}
this.jqxGrid.addfilter(sortColumn,filtergroup);this.jqxGrid.applyfilters()}else{this.jqxGrid.clearfilters()}}
return!0}else{this.#_alert({columnClass:'medium',title:'<b>Warning : Filter Data</b>',content:'Please perform column sorting to select filter field.'});if(typeof clearInputWhenError==='boolean'&&clearInputWhenError)
searchInput.val('');return!1}}
constructor(){this.prop;let args=arguments[0];let args_1=arguments[1];let syntax='old';if(typeof args==='object'){if(!args.id)return console.error("[EnhanceDataGrid] Error: No define 'id' !");if(!args.columns){return console.error("[EnhanceDataGrid] Error: No define 'columns' !")}
this.#_id=args.id;delete args.id}
if(typeof args==='string'&&typeof args_1==='object'){syntax='new';this.#_id=args;args=args_1}
this.#_props={...this.#_props,...args};this.#_initJqxGrid(syntax)}
get jqxGrid(){return this.#_grid}
clearSelection(){if(this.#_syntax==='old'){switch(this.jqxGrid.jqxGrid('selectionmode')){case 'singlerow':case 'singlecell':if(this.getSelectedRowIndex()>-1)
this.jqxGrid.jqxGrid('clearselection');break;case 'singlerow':if(this.getSelectedRowIndexes!='')
this.jqxGrid.jqxGrid('clearselection');break;default:this.jqxGrid.jqxGrid('clearselection');break}}
if(this.#_syntax==='new'){switch(this.jqxGrid.selectionmode){case 'singlerow':case 'singlecell':if(this.getSelectedRowIndex()>-1)
this.jqxGrid.clearselection();break;case 'singlerow':if(this.getSelectedRowIndexes().length>0)
this.jqxGrid.clearselection();break;default:this.jqxGrid.clearselection();break}}}
getAllDirty(){return this.#_allDirty}
getCellValue(rowBoundIndex,dataField){if(this.#_syntax==='old')
return this.jqxGrid.jqxGrid('getcellvalue',rowBoundIndex,dataField);if(this.#_syntax==='new')
return this.jqxGrid.getcellvalue(rowBoundIndex,dataField);}
getCheckedItems(){return this.#_checkedItems}
getDirty(){return this.#_dirty}
getRowData(rowBoundIndex){rowBoundIndex=rowBoundIndex>-1?rowBoundIndex:-1;if(this.#_syntax==='old')
return this.jqxGrid.jqxGrid('getrowdata',rowBoundIndex);if(this.#_syntax==='new')
return this.jqxGrid.getrowdata(rowBoundIndex);}
getRows(){if(this.#_syntax==='old')
return this.jqxGrid.jqxGrid('getrows');if(this.#_syntax==='new')
return this.jqxGrid.getrows();}
getSelectedCellValue(dataField){if(this.#_syntax==='old')
return this.jqxGrid.jqxGrid('getcellvalue',this.getSelectedRowIndex(),dataField);if(this.#_syntax==='new')
return this.jqxGrid.getcellvalue(this.getSelectedRowIndex(),dataField);}
getSelectedRowData(){if(this.#_syntax==='old')
return this.jqxGrid.jqxGrid('getrowdata',this.getSelectedRowIndex());if(this.#_syntax==='new')
return this.jqxGrid.getrowdata(this.getSelectedRowIndex());}
getSelectedRowIndex(){if(this.#_syntax==='old')
return this.jqxGrid.jqxGrid('getselectedrowindex');if(this.#_syntax==='new')
return this.jqxGrid.getselectedrowindex();}
getSelectedRowIndexes(){if(this.#_syntax==='old')
return this.jqxGrid.jqxGrid('getselectedrowindexes');if(this.#_syntax==='new')
return this.jqxGrid.getselectedrowindexes();}
getSourceUrl(){if(this.#_syntax==='old')
return this.jqxGrid.jqxGrid('source')._source.url;if(this.#_syntax==='new')
return this.jqxGrid.source._source.url}
hideColumn(columns){const grid=this.jqxGrid;if(typeof columns==='string'){if(this.#_syntax==='old'){grid.jqxGrid('beginupdate');grid.jqxGrid('hideColumn',columns);grid.jqxGrid('endupdate')}
if(this.#_syntax==='new'){grid.beginupdate();grid.hidecolumn(columns);grid.endupdate()}
return!0}
if(typeof columns==='object'){if(columns.length>0){columns.forEach(column=>{if(this.#_syntax==='old'){grid.jqxGrid('beginupdate');grid.jqxGrid('hideColumn',column);grid.jqxGrid('endupdate')}
if(this.#_syntax==='new'){grid.beginupdate();grid.hidecolumn(column);grid.endupdate()}});return!0}
return!1}
return!1}
on(event,callback){this.jqxGrid.on(event,callback)}
refresh(){this.#_clearSelection=!0;this.updateBoundData('all')}
showColumn(columns){const grid=this.jqxGrid;if(typeof columns==='string'){if(this.#_syntax==='old'){grid.jqxGrid('beginupdate');grid.jqxGrid('showColumn',columns);grid.jqxGrid('endupdate')}
if(this.#_syntax==='new'){grid.beginupdate();grid.showcolumn(columns);grid.endupdate()}
return!0}
if(typeof columns==='object'){if(columns.length>0){columns.forEach(column=>{if(this.#_syntax==='old'){grid.jqxGrid('beginupdate');grid.jqxGrid('showColumn',column);grid.jqxGrid('endupdate')}
if(this.#_syntax==='new'){grid.beginupdate();grid.showcolumn(column);grid.endupdate()}});return!0}
return!1}
return!1}
updateBoundData(type){this.#_clearDirtyFlag();type=type?type:'data';if(type&&type!='all'){if(this.#_syntax==='old')
this.jqxGrid.jqxGrid('updatebounddata',type);if(this.#_syntax==='new')
this.jqxGrid.updatebounddata(type);}else{if(this.#_syntax==='old')
this.jqxGrid.jqxGrid('updatebounddata');if(this.#_syntax==='new')
this.jqxGrid.updatebounddata();}}
updateCellValue(rowBoundIndex,dataField,value){if(this.#_syntax==='old')
this.jqxGrid.jqxGrid('setcellvalue',rowBoundIndex,dataField,value);if(this.#_syntax==='new')
this.jqxGrid.setcellvalue(rowBoundIndex,dataField,value);}
setSelectedCellValue(column,value){if(this.#_syntax==='old')
this.jqxGrid.jqxGrid('setcellvalue',this.getSelectedRowIndex(),column,value);if(this.#_syntax==='new')
this.jqxGrid.setcellvalue(this.getSelectedRowIndex(),column,value);}
setSourceUrl(url,autoRefresh){if(!this.#_dataSource)
this.dataAdapter._source.url=url;else this.#_dataSource.url=url;if(typeof autoRefresh==='undefined'||(typeof autoRefresh==='boolean'&&autoRefresh))
this.refresh();}}